buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
// for app
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// for library
// apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        // disable for library
        applicationId "com.warrantix.main"
        versionCode 19
        versionName "v0.019"

        minSdkVersion 15
        targetSdkVersion 23
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("app-release.apk", "Wallet-WRX-${variant.versionName}.apk"))
        }
    }

    signingConfigs {
        release {
            storeFile file("../keystore/keystore.jks")
            storePassword "rootroot"
            keyAlias "host"
            keyPassword "rootroot"
        }
    }

    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//        }

        release {
            signingConfig signingConfigs.release
            debuggable true
            buildConfigField 'String', 'API_VERSION', project.API_VERSION
            buildConfigField 'String', 'ENDPOINT', project.SERVER_DEV
            buildConfigField 'String', 'CONFIG_URL', project.CONFIG
            buildConfigField 'boolean', 'MOCKUP_APP', 'false'
        }

        debug {
            signingConfig signingConfigs.release
            debuggable true
            buildConfigField 'String', 'API_VERSION', project.API_VERSION
            buildConfigField 'String', 'ENDPOINT', project.SERVER_DEV
            buildConfigField 'String', 'CONFIG_URL', project.CONFIG
            buildConfigField 'boolean', 'MOCKUP_APP', 'false'
        }

//        mocrelease {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//            debuggable false
//            versionNameSuffix '-mocrelease'
//            buildConfigField 'String', 'API_VERSION', project.API_VERSION
//            buildConfigField 'String', 'ENDPOINT', project.SERVER
//            buildConfigField 'String', 'CONFIG_URL', project.CONFIG
//            buildConfigField 'boolean', 'MOCKUP_APP', 'true'
//        }
//
//        mocdebug {
//            signingConfig signingConfigs.release
//            debuggable true
//            versionNameSuffix '-mocdebug'
//            buildConfigField 'double', 'API_VERSION', project.API_VERSION
//            buildConfigField 'String', 'ENDPOINT', project.SERVER
//            buildConfigField 'String', 'CONFIG_URL', project.CONFIG
//            buildConfigField 'boolean', 'MOCKUP_APP', 'true'
//        }
//
//        prorelease {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//            debuggable false
//            versionNameSuffix '-prorelease'
//            buildConfigField 'String', 'API_VERSION', project.API_VERSION
//            buildConfigField 'String', 'ENDPOINT', project.SERVER
//            buildConfigField 'String', 'CONFIG_URL', project.CONFIG
//            buildConfigField 'boolean', 'MOCKUP_APP', 'false'
//        }
//
//        prodebug {
//            signingConfig signingConfigs.release
//            debuggable true
//            versionNameSuffix '-prodebug'
//            buildConfigField 'String', 'API_VERSION', project.API_VERSION
//            buildConfigField 'String', 'ENDPOINT', project.SERVER
//            buildConfigField 'String', 'CONFIG_URL', project.CONFIG
//            buildConfigField 'boolean', 'MOCKUP_APP', 'false'
//        }
//
//        devrelease {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//            debuggable false
//            versionNameSuffix '-devrelease'
//            buildConfigField 'String', 'API_VERSION', project.API_VERSION
//            buildConfigField 'String', 'ENDPOINT', project.SERVER_DEV
//            buildConfigField 'String', 'CONFIG_URL', project.CONFIG_DEV
//            buildConfigField 'boolean', 'MOCKUP_APP', 'false'
//        }
//
//        devdebug {
//            signingConfig signingConfigs.release
//            debuggable true
//            versionNameSuffix '-devdebug'
//            buildConfigField 'String', 'API_VERSION', project.API_VERSION
//            buildConfigField 'String', 'ENDPOINT', project.SERVER_DEV
//            buildConfigField 'String', 'CONFIG_URL', project.CONFIG_DEV
//            buildConfigField 'boolean', 'MOCKUP_APP', 'false'
//        }

    }

    // for library
//    lintOptions {
//        abortOnError false
//    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('eu.livotov.labs.android:CAMView:2.0.1@aar') {
        transitive = true
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'

    compile 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.google.android.gms:play-services-gcm:9.0.0'
    compile 'com.google.android.gms:play-services-location:9.0.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.ogaclejapan.smarttablayout:library:1.6.0@aar'
    compile 'com.ogaclejapan.smarttablayout:utils-v4:1.6.0@aar'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compile 'com.noveogroup.android:android-logger:1.3.5'
    compile 'me.dm7.barcodescanner:zxing:1.8.4'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'com.intuit.sdp:sdp-android:1.0.2'
    compile ('com.squareup.retrofit2:retrofit:2.0.2') {
        exclude module: 'okhttp'
    }
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'com.squareup:otto:1.3.4'
    compile 'com.oguzdev:CircularFloatingActionMenu:1.0.2'
    compile 'com.ogaclejapan.arclayout:library:1.0.1@aar'
    compile 'com.eftimoff:android-pathview:1.0.8@aar'
    compile 'com.scottyab:aescrypt:0.0.1'
    compile 'com.kyleduo.switchbutton:library:1.4.0'
    compile 'com.joanzapata.pdfview:android-pdfview:1.0.4@aar'
    compile 'it.sephiroth.android.library.targettooltip:target-tooltip-library:1.3.14'
    compile 'com.mobsandgeeks:android-saripaar:1.0.3'
    compile 'com.github.2359media:EasyAndroidAnimations:0.8'
    compile 'me.relex:circleindicator:1.2.1@aar'

    // Using Citrus SDK
    compile ('com.citrus.sdk:payment-sdk:3.4.11:retrofitnewRelease@aar')  {
        transitive = false
    }

    compile 'com.squareup.okhttp:logging-interceptor:2.6.0' //to enable logging
    compile 'com.citrus.sdk:bankassets:1.0.0'
    compile 'com.citrus.sdk:cardassets:1.0.0'

    //    compile 'com.github.florent37:viewanimator:1.0.4'
//        compile 'com.google.firebase:firebase-invites:9.0.0'
}

// task to delete the old jar
task deleteOldJar(type: Delete) {
    delete 'out/modules.jar'
}

// task to export contents as jar
task exportJar(type: Copy) {
    from('build/intermediates/bundles/release')
    into('out/')
    include('classes.jar')
    rename('classes.jar', 'modules.jar')
}

exportJar.dependsOn('deleteOldJar', build)
apply plugin: 'com.google.gms.google-services'
